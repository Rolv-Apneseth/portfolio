@use "sass:color";
@use "./hover_link" as *;
@use "../abstracts/mediaQueries" as *;

@keyframes startup {
    from {
        transform: translateY(-100%);
    }
    to {
        transform: translateY(var(--space-xs));
    }
}

.topbar {
    font-size: var(--font-size-l);
    width: 100%;
    min-height: var(--space-m);
    position: fixed;
    z-index: 10000;
    right: 0;
    left: 0;
    top: 0;
    padding: var(--space-xs) var(--site-margins);

    display: flex;
    justify-content: right;
    align-items: center;

    transform: translateY(-100%);
    transition-property: background-color, transform, box-shadow;
    transition-duration: var(--animation-duration);

    // Statup animation, only runs once --------------------------
    animation-name: startup;
    animation-duration: var(--animation-duration);
    //------------------------------------------------------------

    &.appear {
        transform: translateY(0);

        &.initial-state {
            transform: translateY(var(--space-xs));
        }

        &:not(.active):not(.initial-state) {
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
            background-color: hsla(
                var(--clr-main-h),
                var(--clr-main-s),
                calc(var(--clr-main-l) - 1%),
                0.7
            );
        }
    }

    &.active {
        transform: translateY(0);
        background-color: transparent;

        nav {
            transform: translateX(0);
        }

        // Form X with hamburger menu
        .hamburger {
            &:nth-child(1) {
                // Move the distance of gap plus thickness of the bar
                transform: translateY(
                        calc(var(--thickness-xl) + var(--thickness-l))
                    )
                    rotate(225deg);
            }
            &:nth-child(2) {
                transform: rotate(-225deg);
            }
            &:nth-child(3) {
                opacity: 0;
                transform: translateY(
                        calc(-1 * var(--thickness-xl) - var(--thickness-l))
                    )
                    rotate(-225deg);
            }
        }
    }

    nav {
        position: absolute;
        right: 0;
        top: 0;
        height: 100vh;
        width: 100%;

        transition: transform var(--animation-duration),
            height var(--transition-duration); // Purely for when testing responsiveness
        transform: translatex(100%);

        ul {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            gap: var(--space-ml);
            justify-content: center;
            align-items: center;

            a {
                font-weight: bold;
                @include hoverLink;
            }
        }
    }

    .topbar-toggle {
        width: var(--space-lm);
        height: calc(var(--space-lm));

        background-color: transparent;
        border-color: transparent;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: var(--thickness-xl);

        .hamburger {
            position: relative;
            display: block;
            width: 100%;
            height: var(--thickness-l);
            background-color: var(--clr-secondary);
            transition: transform var(--animation-duration);
        }
    }

    // Desktop navbar
    @include desktop-small-up {
        // prevent changes if mobile nav is open
        &:not(.active) {
            min-height: var(--space-l);
            font-size: var(--font-size-m);

            .topbar-toggle {
                display: none;
            }

            nav {
                height: 100%;
                transform: translatex(0);

                ul {
                    flex-direction: row;
                }
            }
        }
    }
}
